# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hDXbm6xIlpiadZBistbQbLv8yN9cI1ao
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import tensorflow as tf
import tensorflow_probability as tfp
import gpflow
from gpflow.utilities import print_summary, set_trainable, to_default_float
from mpl_toolkits.mplot3d import Axes3D

data = np.array(pd.read_csv('gyro_fake_data_v1.csv'))

Y = Y_plot = data[:100,1].reshape(-1,1)
X1 = X1_plot = data[:100,2]
X2 = X2_plot = data[:100,3]

#np.random.seed(1991)
meanf = gpflow.mean_functions.Constant(c=1.5)
k = gpflow.kernels.Matern12(variance=10.0, lengthscales=[0.2, 10])
X = np.dstack([X1, X2]).reshape(-1, 2)
m = gpflow.models.GPR(data=(X, Y), kernel=k, mean_function=meanf)

x1_mesh, x2_mesh = np.meshgrid(X1, X2)

resolution = 50
X1_test = np.linspace( 0.4, 1.5, num=resolution )
X2_test = np.linspace( 1.0, 40.0, num=resolution )
X1_test, X2_test = np.meshgrid( X1_test, X2_test )
X_test = np.dstack([X1_test, X2_test]).reshape(resolution, resolution, 2)

print(X_test.shape)

# predict training set
mean, _ = m.predict_y( X_test )
mean = tf.squeeze(mean)

fig = plt.figure()
ax = plt.axes(projection='3d')
ax.plot_surface(X1_test, X2_test, mean, antialiased=True, alpha=0.5, linewidth=0.5, cmap='winter')
ax.scatter3D(X1, X2, Y, marker='o',edgecolors='k', color='r', s=150)
ax.set_xlabel('B-V Index')
ax.set_ylabel('Rotation Period (Days)')
ax.set_zlabel('Age (Gyr)')
plt.show()
plt.legend()
